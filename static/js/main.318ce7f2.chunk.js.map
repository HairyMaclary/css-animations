{"version":3,"sources":["animation.tsx","code-display.tsx","examples.ts","container.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Animation","props","code","css","html","className","index","animation","ReactHtmlParser","buttons","isOnDisplay","onClick","resetClickHandler","showClickHander","Style","it","CodeDisplay","updateCSS","event","preventDefault","updateCode","setState","cssDisplay","target","value","displayHTMLHandler","prevState","displayHTML","state","nextProps","nextState","this","rows","split","length","name","onChange","React","Component","examples","description","importantProperties","deepCopy","obj","JSON","parse","stringify","Container","updateStyle","animations","displayedAnimationIndex","changeCurrentAnimation","resetCSS","map","key","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.318ce7f2.chunk.js","sourcesContent":["\r\nimport React, { ReactElement } from 'react';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport Style from 'style-it';\r\nimport { ICode } from './container';\r\nimport './animation.css';\r\ninterface IStyle {\r\n  it: (cssText: string, rootElement: ReactElement) => string; \r\n};\r\n\r\nexport interface IAnimationProps {\r\n  code: ICode,\r\n  index: number,\r\n  isOnDisplay: boolean\r\n  showClickHander: () => void,\r\n  resetClickHandler: () => void,\r\n}\r\n\r\nexport function Animation(props: IAnimationProps) {\r\n\r\n  const { css, html } = props.code;\r\n  const className = `animation animation-${props.index}`;\r\n  const animation = <div className={className}>{ReactHtmlParser(html)}</div>;\r\n  const buttons = props.isOnDisplay ?\r\n    <div className={'button reset-button'} onClick={props.resetClickHandler}>reset</div> :\r\n    <div className={'button show-button'} onClick={props.showClickHander}>show</div>\r\n\r\n  return (\r\n    <div>\r\n      <div className='animation-container'>\r\n        {buttons}\r\n        {(Style as unknown as IStyle).it(css, animation)}\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport { ICode } from './container';\r\nimport './code-display.css'\r\n\r\nexport interface ICodeDisplayProps {\r\n    code: ICode\r\n    updateCode: (event: React.ChangeEvent<HTMLTextAreaElement>) => void\r\n}\r\n\r\nexport interface ICodeDisplayState {\r\n    cssDisplay: string,\r\n    displayHTML: boolean;\r\n}\r\n\r\n// export function CodeDisplay(props: {code: ICode, updateCode: any}) {\r\nexport class CodeDisplay extends React.Component<ICodeDisplayProps, ICodeDisplayState> {\r\n\r\n    constructor(props: ICodeDisplayProps) {\r\n        super(props);\r\n        this.state = { cssDisplay: props.code.css, displayHTML: false }\r\n    }\r\n\r\n    // This is a workaround to the value attribute in textarea not updating.\r\n    // But, we need to be careful that we don't miss out on wanted updates\r\n    shouldComponentUpdate(nextProps: ICodeDisplayProps, nextState: ICodeDisplayState) {\r\n        if (nextProps.code.css !== this.state.cssDisplay || this.props.code.css !== nextProps.code.css) {\r\n            this.setState({ cssDisplay: nextProps.code.css })\r\n            return true;\r\n        } else if (nextState.displayHTML !== this.state.displayHTML){ //update for html button toggle\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    updateCSS = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        event.preventDefault();\r\n        this.props.updateCode(event);\r\n        this.setState({ cssDisplay: event.target.value });\r\n    }\r\n\r\n    displayHTMLHandler = () => {\r\n        this.setState((prevState: ICodeDisplayState) => {\r\n            return {displayHTML: !prevState.displayHTML};\r\n          })\r\n    }\r\n\r\n    render() {\r\n        const textRowCount = this.state.cssDisplay.split(':').length;\r\n        const rows = textRowCount + 1;\r\n\r\n        return (\r\n            <div className=\"codeBlock\">\r\n                <button onClick={this.displayHTMLHandler}>Display HTML</button>\r\n                <pre>\r\n                    {this.state.displayHTML ? <code>{this.props.code.html}</code>: null}\r\n                    <br></br>\r\n                    <br></br>\r\n                    <textarea name={'display'} rows={rows} value={this.state.cssDisplay} onChange={this.updateCSS} />\r\n                </pre>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { IAnimationData } from \"./container\";\r\n\r\nexport const examples: IAnimationData[] = [\r\n    {\r\n        description: 'Homing Window',\r\n        html: `<ul>\r\n        <li>\r\n            Home\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n        </li>\r\n        <li>\r\n            About\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n        </li>\r\n        <li>\r\n            Services\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n        </li>\r\n        <li>\r\n            Contact\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n        </li>\r\n        </ul>`,\r\n        importantProperties: ['', ''],\r\n        css: `\r\n        ul {\r\n          display: flex;\r\n          width: 60%;\r\n          flex-direction: row;\r\n      }\r\n      \r\n      li {\r\n          flex: 1;\r\n          display: inline-block;\r\n          height: 75px;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          position: relative;\r\n          transition: all 0.5s linear;\r\n          overflow: hidden;\r\n          border-radius: 8px;\r\n          margin: 3px;\r\n          perspective: 900px;\r\n      }\r\n      \r\n      li:hover {\r\n          color: white;\r\n      }\r\n      \r\n      span {\r\n          position: absolute;\r\n          left: 0;\r\n          top: 0;\r\n          background-color: blue;\r\n          height: 100%;\r\n          width: 25%; \r\n          z-index: -1;\r\n          transform: scale(0) translateY(100%) translateX(100%);\r\n          transition: all 0.8s ease-in;\r\n          transform-origin: top;\r\n      }\r\n      \r\n      \r\n      li:hover span {\r\n          transform: scale(1) translateY(0) translateX(0);\r\n      }\r\n      \r\n      span:nth-child(2) {\r\n          left: 12.5%;\r\n          transition-delay: 0.1s;\r\n      }\r\n      \r\n      span:nth-child(3) {\r\n          left: 25%;\r\n          transition-delay: 0.2s;\r\n      }\r\n      \r\n      span:nth-child(4) {\r\n          left: 37.5%;\r\n          transition-delay: 0.3s;\r\n      }\r\n      \r\n      span:nth-child(5) {\r\n          left: 50%;\r\n          transition-delay: 0.4s;\r\n      }\r\n      \r\n      span:nth-child(6) {\r\n          left: 62.5%;\r\n          transition-delay: 0.5s;\r\n      }\r\n      \r\n      span:nth-child(7) {\r\n          left: 75%;\r\n          transition-delay: 0.6s;\r\n      }\r\n      \r\n      span:nth-child(8) {\r\n          left: 87.5%;\r\n          transition-delay: 0.7s;\r\n      }\r\n    `\r\n    },\r\n    {\r\n        description: 'Fold Message Over Top',\r\n        html: `<button>Hover Me</button>`,\r\n        importantProperties: [''],\r\n        css: `button {\r\n          border: 2px solid black;\r\n          height: 100px;\r\n          width: 200px;\r\n          position: relative;\r\n          font-size: 20px;\r\n          letter-spacing: 2px;\r\n          font-family: cursive;\r\n          text-transform: uppercase;\r\n      }\r\n      \r\n      button::before {\r\n          content: 'Hover Me';\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          background-color: greenyellow;\r\n          position: absolute;\r\n          top: 0px;\r\n          left: 0px;\r\n          height: 100%;\r\n          width: 100%;\r\n          transform-origin: top;\r\n          transform: rotateX(270deg);\r\n          transition: transform 1s linear;\r\n      }\r\n      \r\n      button::after {\r\n          content: 'Hover Me';\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          background-color: tomato;\r\n          position: absolute;\r\n          top: 0px;\r\n          left: 0px;\r\n          height: 100%;\r\n          width: 100%;\r\n          transform-origin: top;\r\n          transform: rotateX(270deg);\r\n          transition: transform 1s linear 1s;\r\n      }\r\n      \r\n      button:hover::before, button:hover::after{\r\n          transform: rotateX(-0deg);\r\n      }\r\n  `\r\n    },\r\n    {\r\n        description: 'Horizontal Expansion',\r\n        html: `<button>button</button>`,\r\n        importantProperties: [''],\r\n        css: `\r\n      button {\r\n        color: red;\r\n        width: 200px;\r\n        height: 100px;\r\n        border: 2px solid red;\r\n        text-transform: uppercase;\r\n        letter-spacing: 1px;\r\n        transition: all 0.5s linear;\r\n        font-size: 16px;\r\n        font-family: sans-serif;\r\n        font-weight: 300;\r\n    }\r\n    \r\n    button:hover {\r\n        width: 250px;\r\n        border: 3px solid red;\r\n        letter-spacing: 10px;\r\n        font-weight: 600;\r\n    }\r\n    `},\r\n    {\r\n        description: 'Shiny Button',\r\n        html: `<a href=\"\">hover me</a>`,\r\n        importantProperties: [''],\r\n        css: `\r\n      a {\r\n        text-decoration: none;\r\n        border-radius: 6px;\r\n        border: 2px solid white;\r\n        color: white;\r\n        background-color: #999;\r\n        padding: 40px;\r\n        width: 200px;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        box-sizing: border-box;\r\n        transition: all 1s ease-out;\r\n        position: relative;\r\n        overflow: hidden;\r\n    \r\n    }\r\n    \r\n    a::before {\r\n        content: '';\r\n        width: 140%;\r\n        height: 40%;\r\n        background-color: white;\r\n        position: absolute;\r\n        bottom: -50%;\r\n        left: -70%;\r\n        z-index -1;\r\n        transform: rotateZ(50deg);\r\n        transform-origin: top;\r\n        transition: all 1s;\r\n    }\r\n    \r\n    a:hover{\r\n        background-color: red;\r\n    }\r\n    \r\n    a:hover::before{\r\n        transform: rotateZ(50deg) translateY(-300px);\r\n    }\r\n    \r\n      `},\r\n    {\r\n        description: 'moving slash',\r\n        html: `<div><a href=\"#\">Hover Me</a></div>`,\r\n        importantProperties: [''],\r\n        css: `\r\n        div {\r\n            position: relative; \r\n            z-index: 1;\r\n            overflow: hidden;\r\n        }\r\n\r\n        a {\r\n            text-decoration: none;\r\n            color: white;\r\n            font-family: sans-serif;\r\n            font-size: 40px;\r\n            border: 3px solid white;\r\n            padding: 40px 80px;\r\n            position: relative;\r\n            overflow: hidden;\r\n        }\r\n        \r\n        a:before {\r\n            content: '';\r\n            background-color: #F44336;\r\n            top: 0;\r\n            left: 0;\r\n            width: 120px;\r\n            height: 100%;\r\n            position: absolute;\r\n            z-index: -1;\r\n            transform: skew(-15deg);\r\n            animation: moving 1.2s linear infinite;\r\n            transition: all .1s;\r\n        }\r\n        \r\n        @keyframes moving {\r\n        \r\n            from { left: -120px }\r\n        \r\n            to \t{ left: 100% }\r\n        \r\n        }\r\n        \r\n        a:hover:before {\r\n            width: 100%;\r\n            transform: skew(0deg);\r\n            animation: none;\r\n        }\r\n    `},\r\n    {\r\n        description: 'The old switcheroo',\r\n        html: `<a href=\"\"></a>`,\r\n        importantProperties: [''],\r\n        css: `\r\n        a {\r\n            text-decoration: none;\r\n            border: 2px solid #ff0;\r\n            color: #ff0;\r\n            background-color: #999;\r\n            padding: 30px;\r\n            width: 200px;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            box-sizing: border-box;\r\n            transition: all 1s ease-out;\r\n            position: relative;\r\n            text-transform: uppercase;\r\n        }\r\n        \r\n        a::before, a::after {\r\n            content: 'hovered';\r\n            width: 100%;\r\n            height: 100%;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            color: #ff0;\r\n            font-size: 2em;\r\n            background-color: #363636;\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            transform: translateX(-100%) scale(0) rotateY(180deg);\r\n            transition: all 1s ease-out;\r\n        }\r\n        \r\n        a::after {\r\n            content: 'hover me';\r\n            transform: translateX(0) scale(1) rotateY(0);\r\n        }\r\n        \r\n        a:hover::before{\r\n            transform: translateX(0) scale(1) rotateY(0);\r\n        }\r\n        \r\n        a:hover::after{\r\n            transform: translateX(100%) scale(0) rotateY(-180deg);\r\n        }\r\n    `},\r\n    {\r\n        description: 'expanding dots',\r\n        html: `<div><a>Hover Me<span></span></a></div>`,\r\n        importantProperties: [''],\r\n        css: `\r\n        div {\r\n            position: relative; \r\n            z-index: 1;\r\n        }\r\n        a {\r\n            text-decoration: none;\r\n            color: #ff0;\r\n            width: 220px;\r\n            height: 80px;\r\n            font-size: 26px;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            box-sizing: border-box;\r\n            transition: all 0.9s;\r\n            position: relative;\r\n            text-transform: uppercase;\r\n            background-color: transparent;\r\n        }\r\n        \r\n        \r\n        a::before, a::after {\r\n            content: '';\r\n            background-color: #ff0;\r\n            border-radius: 50%;\r\n            position: absolute;\r\n            width: 20px;\r\n            height: 20px;\r\n            transform: translateX(-110px);\r\n            box-shadow: -50px 0 0 #ff0;\r\n            transition: all 0.4s ease-out;\r\n            opacity: 0;\r\n            z-index: -1;\r\n        }\r\n        \r\n        a::after {\r\n            content: '';\r\n            background-color: #ff0;\r\n            transform: translateX(110px);\r\n            box-shadow: 50px 0 0 #ff0;\r\n        }\r\n        \r\n        a:hover::before{\r\n            box-shadow: -20px 0 0 #ff0;\r\n            transform: translateX(0);\r\n            opacity: 1;\r\n        }\r\n        \r\n        a:hover::after{\r\n            box-shadow: 20px 0 0 #ff0;\r\n            transform: translateX(0);\r\n            opacity: 1;\r\n        }\r\n        \r\n        span {\r\n          position: absolute;\r\n          top: 0;\r\n          left: 0;\r\n          width: 100%;\r\n          height: 100%;\r\n          background-color: #ff0;\r\n          border-radius: 8px;\r\n          transform: scale(0);\r\n          transition: all 0.4s;\r\n          z-index: -1;\r\n        }\r\n        \r\n        a:hover span {\r\n            transform: scale(1);\r\n            transition-delay: 0.35s;\r\n        }\r\n        \r\n        a:hover {\r\n            color: #262626;\r\n            transition-delay: 0.4s;\r\n        }\r\n        `\r\n    },\r\n    {\r\n        description: 'flap slapper',\r\n        html: `<div><a>Button Hover Effect</a></div>`,\r\n        importantProperties: [''],\r\n        css: `\r\n        div {\r\n            position: relative;\r\n            z-index: 1;\r\n        }\r\n        \r\n        a {\r\n            font-family: verdana;\r\n            text-decoration: none;\r\n            color: white;\r\n            width: 300px;\r\n            height: 60px;\r\n            display: flex;\r\n            letter-spacing: 2px;\r\n            font-weight: bold;\r\n            justify-content: center;\r\n            align-items: center;\r\n            box-sizing: border-box;\r\n            transition: all 0.4s;\r\n            position: relative;\r\n            text-transform: uppercase;\r\n            background-color: transparent;\r\n        }\r\n        \r\n        \r\n        \r\n        a::before, a::after {\r\n            content: '';\r\n            background-color: #20caff;\r\n            position: absolute;\r\n            top: -3px;\r\n            left: -3px;\r\n            width: 100%;\r\n            height: 100%;\r\n        /*    opacity: 0.5;*/\r\n            z-index: -1;\r\n            transform-origin: top;\r\n            transition: all 0.4s;\r\n            mix-blend-mode: multiply;\r\n            transition: all 0.3s linear;\r\n        }\r\n        \r\n        \r\n        a::after {\r\n            content: '';\r\n            background-color: #ff7675;\r\n            bottom: 3px;\r\n            right: 3px;\r\n            transform: translate(4px, 4px);\r\n            transform-origin: bottom;\r\n        }\r\n        \r\n        a:hover::before{\r\n            transform: perspective(500px) rotateX(80deg);\r\n        }\r\n        \r\n        a:hover::after{\r\n            transform: perspective(500px) rotateX(-80deg);\r\n        }\r\n        `\r\n    },\r\n    {\r\n        description: 'darkening text',\r\n        html: `<div><h1>text</h1></div>`,\r\n        importantProperties: [''],\r\n        css: `\r\n        div {\r\n            position: relative;\r\n            z-index: 1;\r\n        }\r\n        \r\n        h1 {\r\n            font-family: verdana;\r\n            font-size: 50px;\r\n            letter-spacing: 7px;\r\n            background-color: white;\r\n            color: black;\r\n            text-transform: uppercase;\r\n            position: relative;\r\n            overflow: hidden;\r\n            padding: 20px;\r\n            box-sizing: border-box;\r\n        }\r\n        \r\n        h1::before {\r\n            content: \"\";\r\n            color: black;\r\n            padding: 20px;\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 100%;\r\n            transition: all 0.5s linear;\r\n            background-color: rgba(255,255,255,0.6);\r\n        }\r\n        \r\n        h1:hover::before {\r\n            transform: translateX(100%);\r\n        }\r\n        `\r\n    },\r\n    {\r\n        description: 'Smokey Bandit',\r\n        html: `\r\n        <ul>\r\n            <li>S</li>\r\n            <li>M</li>\r\n            <li>O</li>\r\n            <li>K</li>\r\n            <li>Y</li>\r\n        </ul>\r\n        `,\r\n        importantProperties: [''],\r\n        css: `\r\n        ul {\r\n            margin: 0;\r\n            padding: 0;\r\n            display: flex;\r\n        }\r\n        \r\n        li {\r\n            list-style: none;\r\n            color: white;\r\n            font-size: 100px;\r\n            font-weight: bold;\r\n            letter-spacing: 10px;\r\n            transition: 2s ease-out;\r\n        }\r\n        \r\n        ul:hover li {\r\n            transform: translateX(100px) translateY(-100px) rotate(90deg);\r\n            filter: blur(10px) opacity(0%);\r\n        }\r\n        \r\n        li:nth-child(2) {\r\n            transition-delay: 0.3s;\r\n        }\r\n        \r\n        li:nth-child(3) {\r\n            transition-delay: 0.6s;\r\n        }\r\n        \r\n        li:nth-child(4) {\r\n            transition-delay: 0.9s;\r\n        }\r\n        \r\n        li:nth-child(5) {\r\n            transition-delay: 1.2s;\r\n        }\r\n        `\r\n    },\r\n    {\r\n        description: 'Angled menu borders',\r\n        html: `\r\n        <ul>\r\n            <li><a href=\"#\">home</a></li>\r\n            <li><a href=\"#\">about</a></li>\r\n            <li><a href=\"#\">portfolio</a></li>\r\n            <li><a href=\"#\">services</a></li>\r\n            <li><a href=\"#\">contact</a></li>\r\n\t    </ul>\r\n        `,\r\n        importantProperties: [''],\r\n        css: `\r\n        ul {\r\n            margin: 0;\r\n            padding: 0;\r\n            display: flex;\r\n            list-style-type: none;\r\n          }\r\n          \r\n          ul li a {\r\n            color: lightgreen;\r\n            font-size: 20px;\r\n            text-decoration: none;\r\n            text-transform: uppercase;\r\n            padding: 5px 10px;\r\n            margin: 0px 10px;\r\n            position: relative;\r\n            transition: all .5s\r\n          }\r\n          \r\n          a:hover {\r\n            background-color: #e91e63;\r\n            color:white;\r\n          }\r\n          \r\n          a:before {\r\n            content: \"\";\r\n            position: absolute;\r\n            bottom: 12px;\r\n            left: 12px;\r\n            width: 12px;\r\n            height: 12px;\r\n            border: 3px solid #e91e63;\r\n            border-width: 0 0 3px 3px;\r\n            opacity: 0;\r\n            transition: all 0.3s\r\n          }\r\n          \r\n          a:hover:before {\r\n            opacity: 1;\r\n            bottom: -8px;\r\n            left: -8px;\r\n          }\r\n          \r\n          a:after {\r\n            content: \"\";\r\n            position: absolute;\r\n            top: 12px;\r\n            right: 12px;\r\n            width: 12px;\r\n            height: 12px;\r\n            border: 3px solid #e91e63;\r\n            border-width: 3px 3px 0 0;\r\n            opacity: 0;\r\n            transition: all 0.3s;\r\n          }\r\n          \r\n          a:hover:after {\r\n            opacity: 1;\r\n            top: -8px;\r\n            right: -8px;\r\n          }\r\n        `\r\n    },\r\n    {\r\n        description: 'Social Media Buttons',\r\n        html: `\r\n        <div class=\"container\">\r\n            <a class=\"icon\" href=\"#\">\r\n            <i class=\"fab fa-facebook-f\"></i>\r\n            </a>\r\n            <a class=\"icon\" href=\"#\">\r\n            <i class=\"fab fa-twitter\"></i>\r\n            </a>\r\n            <a class=\"icon\" href=\"#\">\r\n            <i class=\"fab fa-google\"></i>\r\n            </a>\r\n            <a class=\"icon\" href=\"#\">\r\n            <i class=\"fab fa-instagram\"></i>\r\n            </a>\r\n            <a class=\"icon\" href=\"#\">\r\n            <i class=\"fab fa-youtube\"></i>\r\n            </a>\r\n        </div>\r\n        `,\r\n        importantProperties: [''],\r\n        css: `\r\n        .container{\r\n            text-align: center;\r\n            display: flex;\r\n          }\r\n          .icon{\r\n            width: 90px;\r\n            height: 90px;\r\n            background: #f1f1f1;\r\n            margin: 10px;\r\n            border-radius: 30%;\r\n            color: #10ac84;\r\n            box-shadow: 0 5px 15px -5px #00000070;\r\n            position: relative;\r\n            overflow: hidden;\r\n          }\r\n          .icon i{\r\n            line-height: 90px;\r\n            font-size: 25px;\r\n            transition: 0.2s;\r\n          }\r\n          .icon:hover i{\r\n            transform: scale(1.3);\r\n            color: #f1f1f1;\r\n          }\r\n          .icon::before{\r\n            content: \"\";\r\n            position: absolute;\r\n            width: 120%;\r\n            height: 120%;\r\n            background: #10ac84;\r\n            left: -110%;\r\n            top: 90%;\r\n            transform: rotate(45deg);\r\n          }\r\n          .icon:hover::before{\r\n            animation: animation 0.7s 1 forwards;\r\n          }\r\n          @keyframes animation {\r\n            0%{\r\n              left: -110%;\r\n              top: 90%;\r\n            }50%{\r\n              left: 15%;\r\n              top: -30%;\r\n            }100%{\r\n              top: -10%;\r\n              left: -10%;\r\n            }\r\n          }\r\n        `\r\n    },\r\n    {\r\n        description: 'Menu line',\r\n        html: `\r\n        <ul>\r\n            <li><a href=\"#\">Home</a></li>\r\n            <li><a href=\"#\">About</a></li>\r\n            <li><a href=\"#\">Services</a></li>\r\n            <li><a href=\"#\">Portfolio</a></li>\r\n            <li><a href=\"#\">Contact</a></li>\r\n        </ul>\r\n        `,\r\n        importantProperties: [''],\r\n        css: `\r\n        ul {\r\n            padding: 0;\r\n            margin: 0;\r\n            display: flex;\r\n            flex-wrap: wrap;\r\n        }\r\n        \r\n        ul li {\r\n            list-style: none;\r\n        }\r\n        \r\n        ul li a {\r\n            text-decoration: none;\r\n            color: #ff0;\r\n            font-size: 22px;\r\n            display: block;\r\n            padding: 10px 15px;\r\n            position: relative;\r\n        }\r\n        \r\n        ul li a:before {\r\n            content: '';\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 2px;\r\n            background-color: #3d3d3d;\r\n            transform: scaleX(0);\r\n            transition: all 0.5s;\r\n            transform-origin: left\r\n        }\r\n        \r\n         ul li a:hover:before, ul li a:hover:after {\r\n             transform: scaleX(1);\r\n         }\r\n        \r\n         ul li a:after {\r\n            content: '';\r\n            position: absolute;\r\n            bottom: 0;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 2px;\r\n            background-color: #3d3d3d;\r\n            transform: scaleX(0);\r\n            transition: all 0.5s;\r\n            transform-origin: right\r\n        }\r\n        `\r\n    },\r\n    {\r\n        description: 'loading',\r\n        html: `\r\n        <div class='container'>\r\n            <div class='loading'></div>\r\n        </div>\r\n        `,\r\n        importantProperties: [''],\r\n        css: `\r\n        .container {\r\n            perspective: 200px;\r\n        }\r\n        \r\n        .loading {\r\n            width: 100px;\r\n            height: 100px;\r\n            background-color: antiquewhite;\r\n            border-radius: 10px;\r\n            animation: loading 2s infinite linear;\r\n        }\r\n        \r\n        @keyframes loading {\r\n            50% {\r\n                transform: rotateY(180deg);\r\n            }\r\n            100% {\r\n                transform: rotateZ(-180deg);\r\n            }\r\n        }\r\n        `\r\n    },\r\n    {\r\n        description: 'word switch',\r\n        html: `\r\n            <h1>I love CSS<span></span></h1>\r\n        `,\r\n        importantProperties: [''],\r\n        css: \r\n        `\r\n        h1 {\r\n            font-size: 1em;\r\n            text-align: center;\r\n            color: white;\r\n            font-family: arial;\r\n            letter-spacing: 10px;\r\n            background-color: #ea2027;\r\n            padding: 40px;\r\n            position: relative;\r\n            min-width: 400px;\r\n        }\r\n        \r\n        span::before {\r\n            content: 'transitions';\r\n            text-transform: uppercase;\r\n            font-family: arial;\r\n            color: #1B1464;\r\n            animation: word-switch 6s infinite;\r\n            animation-timing-function: linear;\r\n            animation-fill-mode: forwards;\r\n        }\r\n\r\n        @keyframes word-switch {\r\n            0% {\r\n                content: 'transitions';\r\n            }\r\n            33% {\r\n                content: 'animations';\r\n            }\r\n            67% {\r\n                content: 'transforms';\r\n            }\r\n        }\r\n        `\r\n    },\r\n    {\r\n        description: 'Lightning',\r\n        html: `\r\n        <ul>\r\n            <li>L</li>\r\n            <li>I</li>\r\n            <li>G</li>\r\n            <li>H</li>\r\n            <li>T</li>\r\n            <li>N</li>\r\n            <li>I</li>\r\n            <li>N</li>\r\n            <li>G</li>\r\n        </ul>\r\n        `,\r\n        importantProperties: [''],\r\n        css: \r\n        `\r\n        ul {\r\n            margin: 0;\r\n            padding: 0;\r\n            display: flex;\r\n        }\r\n        \r\n        ul li {\r\n            list-style: none;\r\n            color: #484848;\r\n            font-size: 80px;\r\n            letter-spacing: 15px;\r\n            animation: lighting 1.6s linear infinite;\r\n        \r\n        }\r\n        \r\n        @keyframes lighting {\r\n            0% {\r\n                color: #484848;\r\n                text-shadow: none;\r\n            }\r\n        \r\n            90% {\r\n                color: #484848;\r\n                text-shadow: none;\r\n            }\r\n        \r\n            100% {\r\n                color: #fff900;\r\n                text-shadow: 0 0 7px #fff900, 0 0 50px #ff6c00;\r\n            }\r\n        }\r\n        \r\n        ul li:nth-child(1) {\r\n            animation-delay: 0\r\n        }\r\n        \r\n        ul li:nth-child(2) {\r\n            animation-delay: 0.1s\r\n        }\r\n        \r\n        ul li:nth-child(3) {\r\n            animation-delay: 0.2s\r\n        }\r\n        \r\n        ul li:nth-child(4) {\r\n            animation-delay: 0.3s\r\n        }\r\n        \r\n        ul li:nth-child(5) {\r\n            animation-delay: 0.4s\r\n        }\r\n        \r\n        ul li:nth-child(6) {\r\n            animation-delay: 0.5s\r\n        }\r\n        \r\n        ul li:nth-child(7) {\r\n            animation-delay: 0.6s\r\n        }\r\n        \r\n        ul li:nth-child(8) {\r\n            animation-delay: 0.7s\r\n        }\r\n\r\n        ul li:nth-child(9) {\r\n            animation-delay: 0.8s\r\n        }\r\n        `\r\n    }\r\n]","import React from 'react';\r\nimport { Animation } from './animation';\r\nimport { CodeDisplay } from './code-display';\r\nimport { examples } from './examples';\r\nimport './container.css';\r\n\r\nexport interface ICode { css: string, html: string };\r\nexport interface IAnimationData {\r\n  description: string;\r\n  html: string;\r\n  importantProperties: string[];\r\n  css: string;\r\n}\r\n\r\ninterface IContainerState {\r\n  animations: IAnimationData[],\r\n  displayedAnimationIndex: number\r\n}\r\n\r\nfunction deepCopy(obj: {}) {\r\n  return JSON.parse(JSON.stringify(obj));\r\n}\r\n\r\nexport class Container extends React.Component<{}, IContainerState> {\r\n\r\n  constructor(props: {}) {\r\n    super(props);\r\n    this.state = {\r\n      animations: deepCopy(examples),\r\n      displayedAnimationIndex: 0\r\n    }\r\n  }\r\n\r\n  updateStyle = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    const animations = deepCopy(this.state.animations);\r\n    animations[this.state.displayedAnimationIndex].css = event.target.value;\r\n    this.setState({ animations })\r\n  }\r\n\r\n  changeCurrentAnimation = (index: number) => {\r\n    this.setState({ displayedAnimationIndex: index })\r\n  }\r\n\r\n  // reset from source data\r\n  resetCSS = (index: number) => {\r\n    const animations = deepCopy(this.state.animations);\r\n    animations[this.state.displayedAnimationIndex].css = deepCopy(examples[index].css);\r\n    this.setState({ animations })\r\n  }\r\n\r\n  animations() {\r\n    return this.state.animations.map((animation, index) => {\r\n      const html = animation.html;\r\n      const css = animation.css;\r\n      return <Animation\r\n        key={index}\r\n        index={index}\r\n        code={{ css, html }}\r\n        showClickHander={() => this.changeCurrentAnimation(index)}\r\n        resetClickHandler={() => this.resetCSS(index)}\r\n        isOnDisplay={this.state.displayedAnimationIndex === index}\r\n      ></Animation>\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { html, css } = this.state.animations[this.state.displayedAnimationIndex];\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"animations-container\" >\r\n          {this.animations()}\r\n        </div>\r\n        <CodeDisplay code={{ css, html }} updateCode={this.updateStyle}></CodeDisplay>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\nimport './App.css';\nimport { Container } from './container';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n          <div className=\"header-img\"></div>\n      </header>\n      <Container></Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}